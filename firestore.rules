rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function authenticated() {
      return request.auth != null
    }

    // function isNotCounsellor() {
    //   return request.auth.token.counsellor == false || request.auth.token.counsellor == null
    // }

    function displayIs(display) {
      return resource.data.display == display
    }
    
  	match /users/{user} {
    	allow read: if authenticated()
      allow create: if request.auth.uid == user
      allow update: if request.auth.uid == user
    }
    match /appointments/{appointment} {
      allow read: if authenticated() && request.auth.uid == resource.data.forUser  
      allow create: if authenticated() && request.resource.data.forUser == request.auth.uid || request.resource.data.forUser == 'all' && request.auth.token.counsellor == false || request.auth.token.counsellor == null && request.resource.data.approved == false
    }
    
    match /resources/{resourceDoc} {
      allow read: if authenticated() && displayIs('public')
      allow write: if false
    }

    match /counsellors/{counsellor} {
      allow read: if authenticated() && displayIs('public')
      allow write: if false
    }
    
    match /timeSlots/{timeSlot} {
      allow read: if authenticated()
    } 
  }
}